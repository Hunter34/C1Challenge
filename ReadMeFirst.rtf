{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 This program is a response to the ChaiOne code challenge. \
\
This document serves as an architectural overview and guide to the overall decisions I made to create this app.\
\
First, here are the requirements:\
\
From -> {\field{\*\fldinst{HYPERLINK "http://c1codechallenge.herokuapp.com/challenges/ios-appnet-client.html"}}{\fldrslt http://c1codechallenge.herokuapp.com/challenges/ios-appnet-client.html}} \
Create an App.net client that just lists the most recent posts from the public timeline.\
	\'95	Each post should be rendered in a table view cell, with the most recent at the top.\
	\'95	Each cell should contain the user\'92s avatar (bonus if the corners are rounded)\
	\'95	Each cell should contain the poster\'92s name in bold\
	\'95	Each cell should contain the post text, and be variable height, depending on the text size\
	\'95	Pull to refresh should be implemented to refresh the timeline\
	\'95	The list should scroll quickly, without dropping frames on an iPhone 5\
	\'95	The latest publicly released iOS SDK should be used\
	\'95	Use of third party libraries are allowed but are not required\
The timeline can be fetched here: {\field{\*\fldinst{HYPERLINK "https://alpha-api.app.net/stream/0/posts/stream/global"}}{\fldrslt https://alpha-api.app.net/stream/0/posts/stream/global}}\
Feel free to use any library you want. The code should reflect how you write classes, methods, etc in a normal application.\
\
\
Information on app.net streams can be found here: {\field{\*\fldinst{HYPERLINK "http://developers.app.net/docs/resources/user-stream/"}}{\fldrslt http://developers.app.net/docs/resources/user-stream/}}\
\
Architectural decisions:\
- Storyboard layout\
- AFNetworking to handle talking to the app.net stream and parsing the JSON\
- A tableview will be used to display the stream\
- iOS 7.1 will be used to build this application, but iOS 7.0 should be fine to run the app. The project has been set to require 7.0\
\
\
I believe in not complicating view controller with data and logic. This belongs in it's own set of objects. The view controller should ask for data, but not manage the process of requesting and assembling the data. Requesting and assembling is for a DataController. \
}